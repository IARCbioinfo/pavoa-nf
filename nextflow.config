manifest {
    homePage = 'https://github.com/iarcbioinfo/pavoa-nf'
    description = 'Pipeline for variant detection: Preprocessing, Alignment, Variant calling, Optimization, Annotation'
    mainScript = 'main.nf'
}

profiles {
  conda { 
    process.conda = "$baseDir/environment.yml"
    conda.createTimeout = "200 min"
  }
  singularity { 
    singularity.enabled = true 
    pullTimeout = "200 min"
  }
  apptainer {
    apptainer.enabled = true
    pullTimeout = "200 min"
  }

  // iarc conf and files for hg38/GRCh38
  iarc_hg38 {
    params {
      cpu = 8
      mem = 60
      cpu_bqsr = 16
      mem_bqsr = 60
      mem_dupcaller = 30
      cpu_dupcaller = 64
      ref = '/data/references/Homo_sapiens/GATK/hg38/Homo_sapiens_assembly38.fasta'
      postaltjs = '/opt/bwa-postalt.js'
      bed = '/data/mca_share/work/capture_files/hg38.bed'
      known_sites = [
        '/data/references/Homo_sapiens/GATK/hg38/gatk-best-practices/somatic-hg38/af-only-gnomad.hg38.vcf.gz',
        '/data/references/Homo_sapiens/GATK/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz'
      ]

    }
  }

}

process {
    shell =  ['/bin/bash','-o','pipefail']

    withLabel:trimgalore{
      container = 'docker://quay.io/microbiome-informatics/trim_galore:0.6.7'
    }

    withLabel:alignment{
      container = 'iarcbioinfo/bwa-mem2-tools:v1.0'
    }

    withLabel:gatk{
      container = 'shub://IARCbioinfo/alignment-nf:v1.3'
    }

    withLabel:dupcaller{
      container = 'iarcbioinfo/dupcaller:v1.0'
    }

    withLabel:multiqc{
      container = 'docker://quay.io/biocontainers/multiqc:1.29--pyhdfd78af_0'
    }

    withLabel:qualimap{
      container = 'docker://quay.io/viascientific/qualimap:2.3'
    }

    withLabel:annotation{
      container = 'iarcbioinfo/gama_annot-nf:v1.2'
    }

    withLabel:annovar{
      container = 'bioinfochrustrasbourg/annovar:latest'
    }
    


}

params.output_folder = "pavoa_" + new Date().format('yyyyMMdd')

timeline {
  enabled = true
  overwrite = true
  file = "${params.output_folder}/nf-pipeline_info/alignment-nf_timeline.html"
}

report {
  enabled = true
  overwrite = true
  file = "${params.output_folder}/nf-pipeline_info/alignment-nf_report.html"
}

trace {
  enabled = true
  overwrite = true
  file = "${params.output_folder}/nf-pipeline_info/alignment-nf_trace.txt"
}

dag {
  enabled = true
  overwrite = true
  file = "${params.output_folder}/nf-pipeline_info/alignment-nf_dag.html"
}


